/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.FilmeController;
import Controller.LocacaoController;
import Model.Cliente;
import Model.Filme;
import Model.TableModelFilme;
import Model.TableModelLocacao;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import miscellaneous.Database;
import miscellaneous.FabricaAbstrata;

/**
 *
 * @author Higor Alves
 */
public class LocacaoView extends javax.swing.JInternalFrame implements View{
    private static LocacaoView instancia = new LocacaoView();
    private TableModelLocacao tableModel = new TableModelLocacao(Database.getInstancia().getLocacaoes());
    private LocacaoController controller = (LocacaoController) FabricaAbstrata.getFabrica("locacao").criarControle();
    /**
     * Creates new form LocacaoView
     */
    private LocacaoView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboCliente = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        comboFilme = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        btAlugar = new javax.swing.JButton();
        btCarregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLocacao = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miAbrir = new javax.swing.JMenuItem();
        miSalvar = new javax.swing.JMenuItem();

        setClosable(true);
        setTitle("Locação");

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Cliente");

        jLabel2.setText("Filme");

        jButton1.setText("Devolver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btAlugar.setText("Alugar");
        btAlugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlugarActionPerformed(evt);
            }
        });

        btCarregar.setText("Carregar");
        btCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCarregarActionPerformed(evt);
            }
        });

        tableLocacao.setModel(tableModel);
        jScrollPane1.setViewportView(tableLocacao);

        jMenu1.setText("File");

        miAbrir.setText("Abrir");
        miAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(miAbrir);

        miSalvar.setText("Salvar");
        miSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSalvarActionPerformed(evt);
            }
        });
        jMenu1.add(miSalvar);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboFilme, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(btCarregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAlugar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(comboFilme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(btAlugar)
                    .addComponent(btCarregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCarregarActionPerformed
        comboCliente.removeAllItems();
        comboFilme.removeAllItems();
        for(Cliente c: Database.getInstancia().getClientes()){
            comboCliente.addItem(c.getNome());
        }
        for(Filme f: Database.getInstancia().getFilmes()){
            if(f.getAlugado().equals("falso")){
                comboFilme.addItem(f.getNome());
            }
        }
        tableModel.updateTable();
    }//GEN-LAST:event_btCarregarActionPerformed

    private void btAlugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlugarActionPerformed
        String cliente = (String) comboCliente.getSelectedItem();
        int indexCliente = comboCliente.getSelectedIndex();
        String filme = (String) comboFilme.getSelectedItem();
        if(controller.alugar(cliente,indexCliente, filme)){
            tableModel.updateTable();
            popUpSucesso(jPanel1, "Filme " + filme + " foi alugado com sucesso!");
        }else{
            popUpError(jPanel1, "Não foi possivel alugar!", "O cliente não pode alugar este filme.");
        }
    }//GEN-LAST:event_btAlugarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            String filme = (String) tableModel.getValueAt(tableLocacao.getSelectedRow(), 1);
            int index = tableLocacao.getSelectedRow();
            if (controller.removerRow(filme, index)){
                tableModel.updateTable();
                popUpSucesso(jPanel1, "Cliente deletado com sucesso!");
            }
        }catch (IndexOutOfBoundsException e){
            popUpError(jPanel1, "Não foi possivel deletar", "Verifique se você selecionou algum locação!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void miSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSalvarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Onde você deseja salvar?");   
        FileNameExtensionFilter filter = new FileNameExtensionFilter("csv", "csv");
        fileChooser.setFileFilter(filter);
        int userSelection = fileChooser.showSaveDialog(jPanel1);
 
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            controller.salvarArq(fileToSave.getAbsolutePath());
        }
    }//GEN-LAST:event_miSalvarActionPerformed

    private void miAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miAbrirActionPerformed
        try{
            String path = null;
            JFileChooser filechooser = new JFileChooser();
            filechooser.setDialogTitle("Procurar base de dados do Filme");
            filechooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("csv", "csv");
            filechooser.setFileFilter(filter);
            int retorno = filechooser.showOpenDialog(this);

            if(retorno == JFileChooser.APPROVE_OPTION){
                File file = filechooser.getSelectedFile();
                path = file.getAbsolutePath();
            }
            controller.abrirArq(path);
            tableModel.updateTable();
        }catch(NullPointerException e){
            
        }
    }//GEN-LAST:event_miAbrirActionPerformed

     private void popUpSucesso(JPanel pane, String mensagem){
        JOptionPane.showMessageDialog(pane,mensagem, "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    }
    private void popUpError(JPanel pane, String titulo, String mensagem){
        JOptionPane.showMessageDialog(pane, mensagem, titulo, JOptionPane.ERROR_MESSAGE);
    }
    
    public static LocacaoView getInstancia(){
        if(instancia == null){
            instancia = new LocacaoView();
        }
        return instancia;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlugar;
    private javax.swing.JButton btCarregar;
    private javax.swing.JComboBox<String> comboCliente;
    private javax.swing.JComboBox<String> comboFilme;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem miAbrir;
    private javax.swing.JMenuItem miSalvar;
    private javax.swing.JTable tableLocacao;
    // End of variables declaration//GEN-END:variables
}
